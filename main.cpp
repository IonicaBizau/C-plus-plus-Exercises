/*
    Ionica Bizau
    22 Februarie 2013
    Grafuri
    -------
    Afisarea varfurilor al caror grad este egal cu o valoare data.


1█████████2░4██████5█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
█░░░░░░░░░█░█░░░░░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
█░░░░░░░░█░░█░░░░░█░░░░░░░░░░█9██░░░░░░░░░░░░░░░░░
█░░░░░░░█░░░█░░░░█░░░░░░░░░██░░░███░░░░░░░░░░░░░░░
█░░░░░░█░░░░█░░░░█░░░░░░░██░░░░░░░░███░░░░░░░░░░░░
█░░░░░█░░░░░█░░░█░░░░░░██░░░░░░░░░░░░███░░░░░░░░░░
█░░░░█░░░░░░█░░█░░░░░░█░░░░░░░░░░░░░░░░░███░░░░░░░
█░░░█░░░░░░░█░█░░░░░██░░░░░░░░░░░░░░░░░░░░███░░░░░
█░░█░░░░░░░░█░█░░░██░░░░░░░░░░░░░░░░░░░░░░░░10░░░░
█░█░░░░░░░░░██░░██░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░
3█░░░░░░░░░░█6██░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░██░
█░░░░░░░░░░░█████████████7░░░░░░░░░░░░██░░░░░█11░░
░░░░░░░░░░░░███░░░░░░░░░░█░░░░░░░░░░██░░░░░░█░░█░░
░░░░░░░░░░░░░░░███░░░░░░░█░░░░░░░░██░░░░░░██░░░█░░
░░░░░░░░░░░░░░░░░░███░░░░░█░░░░░██░░░░░░██░░░░░█░░
░░░░░░░░░░░░░░░░░░░░░███░░█░░░██░░░░░░░█░░░░░░░█░░
░░░░░░░░░░░░░░░░░░░░░░░░███░░█░░░░░░░██░░░░░░░░█░░
░░░14██████████████████████8█░░░░░░░█░░░░░░░░░█░░░
░░░█████░░░░░░░░░░░░░░░░░░░█░░░░░░░13█░░░░░░░░█░░░
░░░░░░░██████░░░░░░░░░░░░░░█░░░░░░░░░███░░░░░░█░░░
░░░░░░░░░░░░█████░░░░░░░░░░█░░░░░░░░░░░███░░░░█░░░
░░░░░░░░░░░░░░░░██████░░░░█░░░░░░░░░░░░░░███░░█░░░
░░░░░░░░░░░░░░░░░░░░░██████░░░░░░░░░░░░░░░░████░░░
░░░░░░░░░░░░░░░░░░░░░░░░░15░░░░░░░░░░░░░░░░░░░12░░
░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

Pentru reprezentarea de mai sus se va afisa:

1 2 3 4 5 7 9 10 11 12 14
0 1 1 0 0 0 0 0 0 0 0 0 0 0 0
1 0 1 0 0 0 0 0 0 0 0 0 0 0 0
1 1 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0
0 0 0 1 1 0 1 1 1 0 0 0 0 0 0
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
0 0 0 0 0 1 1 0 0 1 0 0 0 1 1
0 0 0 0 0 1 0 0 0 1 0 0 0 0 0
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1
0 0 0 0 0 0 0 1 0 0 1 0 0 1 0

*/

#include <iostream>

using namespace std;

int graph[100][100];

void initialize(int n) {
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= n; j++) {
            graph[i][j] = 0;
        }
    }
}

void writeGraph(int n, int g) {

    for(int i = 1; i <= n; i++) {
        int s = 0;
        for(int j = 1; j <= n; j++) {
            s += graph[i][j];
        }

        if(s == g) {
            cout << i << " ";
        }
    }
    cout << endl;

    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= n; j++) {
            cout << graph[i][j] << " ";
        }
        cout << endl;
    }


}

void readGraph(int m, int n) {
    int x, y;

    for (int k = 1; k <= m; k++) {
        cout << "Muchia cu numarul de ordine k = "<< k << endl;

        do {
            cout << "x = ";
            cin >> x;

            cout << "y = ";
            cin >> y;
        } while(x < 1 || x > n || y < 1 || y > n);
        graph[x][y] = graph[y][x] = 1;
    }
}

int main() {
    int n = 0,
        m = 0;

    cout << "n = ";
    cin >> n;

    cout << "m = ";
    cin >> m;

    initialize(n);

    readGraph(m, n);

    int g;

    cout << "Grad = ";
    cin >> g;

    writeGraph(n, g);

    return 0;
}
